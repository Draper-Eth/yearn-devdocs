"use strict";(self.webpackChunkyearn_devdocs=self.webpackChunkyearn_devdocs||[]).push([[1275],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(r),m=a,g=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return r?n.createElement(g,s(s({ref:t},u),{},{components:r})):n.createElement(g,s({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7020:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return l},default:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),s={},i="Operations procedures",c={unversionedId:"process-and-procedures/operations",id:"version-0.4.3/process-and-procedures/operations",isDocsHomePage:!1,title:"Operations procedures",description:"Revoking a strategy with normal migration",source:"@site/versioned_docs/version-0.4.3/process-and-procedures/operations.md",sourceDirName:"process-and-procedures",slug:"/process-and-procedures/operations",permalink:"/yearn-devdocs/v2/process-and-procedures/operations",editUrl:"https://github.com/yearn/yearn-devdocs/edit/master/website/versioned_docs/version-0.4.3/process-and-procedures/operations.md",tags:[],version:"0.4.3",frontMatter:{},sidebar:"version-0.4.3/mySidebar",previous:{title:"Deploying a Vault and Strategy V2",permalink:"/yearn-devdocs/v2/process-and-procedures/deployment"},next:{title:"Emergency Procedures for Yearn Finance",permalink:"/yearn-devdocs/v2/process-and-procedures/emergency"}},l=[{value:"Revoking a strategy with normal migration",id:"revoking-a-strategy-with-normal-migration",children:[{value:"From the vault",id:"from-the-vault",children:[]},{value:"From the strategy",id:"from-the-strategy",children:[]}]},{value:"Emergency Procedures",id:"emergency-procedures",children:[]}],u={toc:l};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"operations-procedures"},"Operations procedures"),(0,o.kt)("h2",{id:"revoking-a-strategy-with-normal-migration"},"Revoking a strategy with normal migration"),(0,o.kt)("p",null,"Let's say we found a problem in one of the strategies and we want to return all funds. There are two ways of doing it."),(0,o.kt)("p",null,"The scripts below use the HEGIC vault as an example."),(0,o.kt)("h3",{id:"from-the-vault"},"From the vault"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# Grab the gov account\ngov = accounts.at(vault.governance(), force=True)\n\n# The cream strategy is the first in the withdrawal queue\ns1 = Contract(vault.withdrawalQueue(0))\n\n# Revoke msg should be sent from gov or guardian\nvault.revokeStrategy(s1, {"from": gov})\n')),(0,o.kt)("p",null,"After running the command you will notice:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"vault.strategies(s1).dict()['debtRatio'] == 0\n")),(0,o.kt)("p",null,"Last step is running a ",(0,o.kt)("inlineCode",{parentName:"p"},"harvest")," to return funds to vault:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'s1.harvest({"from": gov})\n>>> hegic.balanceOf(s1)\n0\n>>> hegic.balanceOf(vault)/1e18\n291731.2666932462\n')),(0,o.kt)("h3",{id:"from-the-strategy"},"From the strategy"),(0,o.kt)("p",null,"From the strategy itself we can turn on emergency mode.\nTo do it we need to run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Grab the strategist account\nstrategist = accounts.at(s1.strategist(), force=True)\n\n# Turn on the emergency exit\ns1.setEmergencyExit({'from': strategist})\n\n# Harvest to move funds to the vault\ns1.harvest({'from': strategist})\n")),(0,o.kt)("p",null,"We should also see the strategy's ",(0,o.kt)("inlineCode",{parentName:"p"},"debtRatio")," going to ",(0,o.kt)("inlineCode",{parentName:"p"},"0")," and funds returning to the vault."),(0,o.kt)("h2",{id:"emergency-procedures"},"Emergency Procedures"),(0,o.kt)("p",null,"We can also shutdown the vault to return assets as soon as possible. To do that we will need a guardian or governance account:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"# Sound the alarm\nvault.setEmergencyShutdown(true, {'from': gov})\n\n# Harvest all strategies\ns1.harvest({'from': gov})\ns2.harvest({'from': gov})\ns3.harvest({'from': gov})\n\n# Check all the tokens are back in the vault\n>>> hegic.balanceOf(vault) == vault.totalAssets()\nTrue\n")),(0,o.kt)("p",null,"You will notice that this procedure doesn't change the debt ratio:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},">>> vault.strategies(s1).dict()['debtRatio']\n1600\n")),(0,o.kt)("p",null,"It drops the credit to ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},">>> vault.creditAvailable(s1)\n0\n")))}p.isMDXComponent=!0}}]);