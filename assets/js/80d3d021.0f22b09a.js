(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{181:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return i})),a.d(t,"toc",(function(){return l})),a.d(t,"default",(function(){return o}));var n=a(3),s=a(8),r=(a(0),a(270)),c={},i={unversionedId:"yearn-lens/yearn-lens",id:"version-0.4.2/yearn-lens/yearn-lens",isDocsHomePage:!1,title:"Yearn Lens",description:"Yearn Lens is a series of smart contracts that aggregate and format Yearn family protocol data into standardized interfaces.",source:"@site/versioned_docs/version-0.4.2/yearn-lens/yearn-lens.md",sourceDirName:"yearn-lens",slug:"/yearn-lens/yearn-lens",permalink:"/yearn-devdocs/v2/yearn-lens/yearn-lens",editUrl:"https://github.com/yearn/yearn-devdocs/edit/master/website/versioned_docs/version-0.4.2/yearn-lens/yearn-lens.md",version:"0.4.2",frontMatter:{},sidebar:"version-0.4.2/mySidebar",previous:{title:"Yearn API",permalink:"/yearn-devdocs/v2/yearn-api"},next:{title:"Deployed Lens Contracts",permalink:"/yearn-devdocs/v2/yearn-lens/contracts"}},l=[{value:"Architecture",id:"architecture",children:[{value:"Block Diagram",id:"block-diagram",children:[]},{value:"Key Concepts",id:"key-concepts",children:[]},{value:"Key Features",id:"key-features",children:[]}]},{value:"Contracts",id:"contracts",children:[{value:"Registry Adapters",id:"registry-adapters",children:[]},{value:"Oracle",id:"oracle",children:[]},{value:"Calculation",id:"calculation",children:[]},{value:"Lens",id:"lens",children:[]}]}],d={toc:l};function o(e){var t=e.components,a=Object(s.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Yearn Lens is a series of smart contracts that aggregate and format Yearn family protocol data into standardized interfaces."),Object(r.b)("h2",{id:"architecture"},"Architecture"),Object(r.b)("h3",{id:"block-diagram"},"Block Diagram"),Object(r.b)("p",null,Object(r.b)("img",{parentName:"p",src:"https://i.imgur.com/1Y5kcxY.png",alt:"Chart"})),Object(r.b)("h3",{id:"key-concepts"},"Key Concepts"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Lens",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"The lens contract acts as the primary data aggregator"),Object(r.b)("li",{parentName:"ul"},"Registry adapters can be added or removed from the lens contract"),Object(r.b)("li",{parentName:"ul"},"The lens contract supports many of the same methods as the registry adapters, but returns aggregated views across asset types"))),Object(r.b)("li",{parentName:"ul"},"Registry Adapters",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"The purpose of registry adapters is to read data from various registries and return data in a standardized format"),Object(r.b)("li",{parentName:"ul"},"Currently registry adapters exist for:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"v1 Vaults"),Object(r.b)("li",{parentName:"ul"},"v2 Vaults"),Object(r.b)("li",{parentName:"ul"},"Earn"),Object(r.b)("li",{parentName:"ul"},"Iron Bank"),Object(r.b)("li",{parentName:"ul"},"veCrv"))),Object(r.b)("li",{parentName:"ul"},"All registry adapters must implement a standardized set of methods (details below)"),Object(r.b)("li",{parentName:"ul"},"Registry adapters have the ability to return metadata specific to an asset type (for example for vaults: ",Object(r.b)("inlineCode",{parentName:"li"},"pricePerShare"),", ",Object(r.b)("inlineCode",{parentName:"li"},"controller"),", etc.)"))),Object(r.b)("li",{parentName:"ul"},"Oracle",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"The oracle contract is responsible for fetching price information from various sources"),Object(r.b)("li",{parentName:"ul"},"The oracle is intended for non-critical off-chain calculations",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"TVL calculations"),Object(r.b)("li",{parentName:"ul"},"Token and asset balance normalizations"),Object(r.b)("li",{parentName:"ul"},"Not intended to be used with strategies or other contracts"))),Object(r.b)("li",{parentName:"ul"},"Prices are returned in USDC"),Object(r.b)("li",{parentName:"ul"},"Supports adding, removing and upgrading price calculations",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Currently supported calculations:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Sushiswap market price (based on ",Object(r.b)("inlineCode",{parentName:"li"},"getAmountsOut"),")"),Object(r.b)("li",{parentName:"ul"},"Uniswap market price  (based on ",Object(r.b)("inlineCode",{parentName:"li"},"getAmountsOut"),")"),Object(r.b)("li",{parentName:"ul"},"Sushiswap/Uniswap LP token prices (based on ",Object(r.b)("inlineCode",{parentName:"li"},"getReserves"),")"),Object(r.b)("li",{parentName:"ul"},"Iron Bank market price (based on ",Object(r.b)("inlineCode",{parentName:"li"},"exchangeRateStored"),")"),Object(r.b)("li",{parentName:"ul"},"Curve LP token price (based on ",Object(r.b)("inlineCode",{parentName:"li"},"virtualPrice")," and base underlying token price)"))))),Object(r.b)("li",{parentName:"ul"},"The oracle contract itself is very lightweight",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"A cascading fallback mechanism is utilized to fetch the most appropriate price for a given asset",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"This means the majority of logic lives on calculation contracts"),Object(r.b)("li",{parentName:"ul"},"This also means the oracle contract gets direct access to all underlying calculation contract helper methods")))))))),Object(r.b)("h3",{id:"key-features"},"Key Features"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Obtain all Yearn family asset data in a standardized interface"),Object(r.b)("li",{parentName:"ul"},"Obtain all user asset and token balances/allowances",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Ability to return USDC normalized balances as well as base asset balances"))),Object(r.b)("li",{parentName:"ul"},"Obtain various TVL calculations for Yearn",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Total TVL"),Object(r.b)("li",{parentName:"ul"},"TVL per asset type"),Object(r.b)("li",{parentName:"ul"},"TVL per asset"))),Object(r.b)("li",{parentName:"ul"},"Integration with all Yearn family protocols",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"v1/v2 vaults"),Object(r.b)("li",{parentName:"ul"},"Iron Bank"),Object(r.b)("li",{parentName:"ul"},"Earn"),Object(r.b)("li",{parentName:"ul"},"VeCrv (base contract and pJar)")))),Object(r.b)("h2",{id:"contracts"},"Contracts"),Object(r.b)("h3",{id:"registry-adapters"},"Registry Adapters"),Object(r.b)("h4",{id:"schema"},"Schema"),Object(r.b)("h5",{id:"standardized-interfaces"},"Standardized Interfaces"),Object(r.b)("p",null,"All registry adapters are required to implement the following interfaces."),Object(r.b)("h6",{id:"adaptermetadata"},"AdapterMetadata"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct AdapterMetadata {\n    string typeId;\n    string categoryId;\n    string subcategoryId;\n}\n")),Object(r.b)("h6",{id:"asset"},"Asset"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct Asset {\n    address id;\n    string typeId;\n    string name;\n    string version;\n    uint256 balance;\n    uint256 balanceUsdc; // Asset TVL == balance * token.priceUsdc\n    Token token;\n    AssetMetadata metadata;\n}\n")),Object(r.b)("h6",{id:"assetstatic-static-not-connected"},"AssetStatic (static) (not connected)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct AssetStatic {\n    address id;\n    string typeId;\n    string name;\n    string version;\n    Token token;\n}\n")),Object(r.b)("h6",{id:"token-static-not-connected"},"Token (static) (not connected)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct Token {\n    address id;\n    string name;\n    string symbol;\n    uint8 decimals;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'assetsStatic():\n[{\n  id: "0x123...",\n  typeId: "v2Vault",\n  name: "YFI Vault",\n  version: "0.3.2",\n  tokenId: "0x234..."\n  token: {\n    id: "0x234...",\n    name: "yearn.finance",\n    symbol: "YFI",\n    decimals: 18\n  }\n}]\n\n')),Object(r.b)("h6",{id:"assetdynamic-dynamic-not-connected"},"AssetDynamic (dynamic) (not connected)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct AssetDynamic {\n    address assetId;\n    address tokenId;\n    AssetMetadata metadata;\n    TokenAmount underlyingTokenBalance; // Amount of underlying token in the asset\n}\n")),Object(r.b)("h6",{id:"tokenamount-dynamic"},"TokenAmount (dynamic)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct TokenAmount {\n    uint256 amount;\n    uint256 amountUsdc;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'assetsDynamic():\n[{\n  assetId: "0x123",\n  tokenId: "0x456",\n  metadata: {\n    pricePerShare: "101000022394340034000"\n  },\n  underlyingTokenBalance: {\n    amount: "53233222334444334444", // vault.totalAssets()\n    amountUsdc: "3422233333445"\n  }\n}]\n\n')),Object(r.b)("h6",{id:"position-dynamic-connected"},"Position (dynamic) (connected)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct Position {\n    address assetId;\n    string typeId;\n    address tokenId;\n    uint256 balance; // asset.balanceOf(account) - shares owned by user\n    TokenPostion underlyingTokenBalance; // Amount of underlying token in the asset that a user owns\n    TokenPosition accountTokenBalance; // Amount of underlying token a user owns\n    Allowance[] tokenAllowances; \n    Allowance[] assetAllowances;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'positionsOf(account):\n[{\n  assetId: "0x123",\n  typeId: "deposit",\n  tokenId: "0x545",\n  balance: "105344343435553", // vault.balanceOf(account)\n  underlyingTokenBalance: {\n    amount: "53233222334444334444", // vault.balanceOf(account) * pricePerShare\n    amountUsdc: "3422233333445"\n  },\n  accountTokenBalance: {\n    amount: "4424424000238", // token.balanceOf(account)\n    amountUsdc: "23323"\n  },\n  tokenAllowances: [{\n    owner: "0x4800", // Account\n    spender: "0x123", // Asset address\n    amount: "115335543535353535235325325325235235325235425235"\n  }],\n  assetAllowances: [{\n    owner: "0x123", // Asset address\n    spender: "0x456", // Trusted migrator\n    amount: "115335543535353535235325325325235235325235425235"\n  }]\n}]\n')),Object(r.b)("h6",{id:"position"},"Position"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct Position {\n    address assetId;\n    uint256 balance;\n    uint256 balanceUsdc;\n    TokenPosition tokenPosition;\n    Allowance[] allowances;\n}\n")),Object(r.b)("h6",{id:"token"},"Token"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct Token {\n    address id;\n    string name;\n    string symbol;\n    uint8 decimals;\n    uint256 priceUsdc;\n}\n")),Object(r.b)("h6",{id:"tokenposition"},"TokenPosition"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct TokenPosition {\n    address tokenId;\n    uint256 balance;\n    uint256 balanceUsdc;\n    Allowance[] allowances;\n}\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct Allowance {\n    address owner;\n    address spender;\n    uint256 allowance;\n}\n")),Object(r.b)("h5",{id:"adapter-specific-interfaces"},"Adapter-specific Interfaces"),Object(r.b)("p",null,"Each registry adapter can export asset metadata that is specific to the asset type."),Object(r.b)("h6",{id:"vault"},"Vault"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"struct AssetMetadata {\n    string symbol;\n    uint256 pricePerShare;\n    bool migrationAvailable;\n    address latestVaultAddress;\n    uint256 depositLimit;\n    bool emergencyShutdown;\n}\n")),Object(r.b)("h6",{id:"earn"},"Earn"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"TBD")),Object(r.b)("h6",{id:"iron-bank"},"Iron Bank"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"TBD")),Object(r.b)("h6",{id:"vecrv"},"veCrv"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"TBD")),Object(r.b)("h4",{id:"methods"},"Methods"),Object(r.b)("p",null,"All registry adapters are required to implement the following methods."),Object(r.b)("h5",{id:"registryaddress"},"registryAddress"),Object(r.b)("p",null,"Get the registry address associated with the adapter. The adapter pulls most information from the registry. ",Object(r.b)("inlineCode",{parentName:"p"},"registryAddress")," is defined in the adapter consturctor."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"address public registryAddress;\n")),Object(r.b)("h5",{id:"assetslength"},"assetsLength"),Object(r.b)("p",null,"Get the number of assets the registry adapter is capable of returning."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assetsLength() public view returns (uint256);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," Number of registry adapter assets"),Object(r.b)("h6",{id:"solidity"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\nuint256 assetsLength = registryAdapter.assetsLength();\n")),Object(r.b)("h6",{id:"example-response"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"32\n")),Object(r.b)("h5",{id:"positionspenderaddresses"},"positionSpenderAddresses"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"address[] public positionSpenderAddresses;\n")),Object(r.b)("h5",{id:"setpositionspenderaddresses"},"setPositionSpenderAddresses"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"function setPositionSpenderAddresses(address addresses)\n")),Object(r.b)("h5",{id:"assetsaddresses"},"assetsAddresses"),Object(r.b)("p",null,"Get a list of asset addresses from the asset adapter's associated registry."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assetsAddresses() public view returns (address[] memory);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," Array of asset addresses"),Object(r.b)("h6",{id:"solidity-1"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\naddress[] assetAddresses = registryAdapter.assetsAddresses();\n")),Object(r.b)("h6",{id:"example-response-1"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"['0xE14d13d8B3b85aF791b2AADD661cDBd5E6097Db1',\n '0xdCD90C7f6324cfa40d7169ef80b12031770B4325',\n '0x986b4AFF588a109c09B50A03f42E4110E29D353F',\n '0xcB550A6D4C8e3517A939BC79d0c7093eb7cF56B5']\n")),Object(r.b)("h5",{id:"assettvl"},"assetTvl"),Object(r.b)("p",null,"Get TVL for a specific asset (in USDC)."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assetTvl(address assetAddress) public view returns (uint256);\n")),Object(r.b)("h6",{id:"solidity-2"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\naddress assetAddress = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\nuint256 assetTvl = registryAdapter.assetTvl(assetAddress);\n")),Object(r.b)("h6",{id:"example-response-2"},"Example Response"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"1637032292")),Object(r.b)("h5",{id:"assetstvl"},"assetsTvl"),Object(r.b)("p",null,"Get aggregated TVL for all assets in the adapter's registry."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assetsTvl() external view returns (uint256);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," Aggregated TVL scoped to the adapter's assets in USDC"),Object(r.b)("h6",{id:"solidity-3"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\nuint256 assetTvl = registryAdapter.assetsTvl();\n")),Object(r.b)("h6",{id:"example-response-3"},"Example Response"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"443923433354832")),Object(r.b)("h5",{id:"asset-1"},"asset"),Object(r.b)("p",null,"Get a specific asset including metadata specific to the asset type. The response extends the standardized ",Object(r.b)("inlineCode",{parentName:"p"},"Asset")," interface."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function asset(address assetAddress) public view returns (Asset memory);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"assetAddress")," The address of the asset to fetch\n",Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," An asset struct containing information about the asset"),Object(r.b)("h6",{id:"solidity-4"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\naddress assetAddress = 0xe2F6b9773BF3A015E2aA70741Bde1498bdB9425b;\nregistryAdapter.asset(assetAddress);\n")),Object(r.b)("h6",{id:"example-response-4"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},"{\n  name: 'WTFTM Vault',\n  id: 0xe2F6b9773BF3A015E2aA70741Bde1498bdB9425b,\n  version: '0.3.2',\n  totalAssets: 129999966466476313000000,\n  totalAssetsUsdc: 14355444934422, // TVL\n  metadata: {\n    controller: 0x19D3364A399d251E894aC732651be8B0E4e85001,\n    pricePerShare: 142004300000000000\n    ...\n  }\n}\n")),Object(r.b)("h5",{id:"assets"},"assets"),Object(r.b)("p",null,"Get all assets for a registry adapter"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assets() external view returns (Asset[] memory);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," An array of asset structs containing information about the assets"),Object(r.b)("h6",{id:"solidity-5"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\nregistryAdapter.assets();\n")),Object(r.b)("h6",{id:"example-response-5"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},"[\n  {\n    name: 'WFTM Vault',\n    id: 0xe2F6b9773BF3A015E2aA70741Bde1498bdB9425b, // vault address\n    version: '0.3.2',\n    totalAssets: 129999966466476313000000,\n    totalAssetsUsdc: 14355444934422, // TVL\n    metadata: {\n      controller: 0x19D3364A399d251E894aC732651be8B0E4e85001,\n      pricePerShare: 142004300000000000\n      ...\n    }\n  },\n  {\n    name: 'fUSD Vault',\n    id: 0x5f18C75AbDAe578b483E5F43f12a39cF75b973a9,\n    version: '0.3.2',\n    totalAssets: 4593326846642963130309078,\n    totalAssetsUsdc: 45444930943854422, // TVL\n    metadata: {\n      controller: 0x19D3364A399d251E894aC732651be8B0E4e85001,\n      pricePerShare: 101003300000000000\n      ...\n    }\n  }\n]\n")),Object(r.b)("h5",{id:"positionof"},"positionOf"),Object(r.b)("p",null,"Get the position of an account for a specific asset address."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function positionOf(address accountAddress, address assetAddress)\n    public\n    view\n    returns (Position memory);\n")),Object(r.b)("h6",{id:"solidity-6"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\naddress accountAddress = 0x481140F916a4e64559694DB4d56D692CadC0326c;\naddress assetAddress = 0xe2F6b9773BF3A015E2aA70741Bde1498bdB9425b;\nregistryAdapter.positionForAsset(accountAddress, assetAddress);\n")),Object(r.b)("h6",{id:"example-response-6"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},"{\n  assetId: 0xe2F6b9773BF3A015E2aA70741Bde1498bdB9425b, // vault address\n  depositedBalance: 10422000000000000000,\n  depositedBalanceUsdc: 10422000,\n  tokenBalance: 2110000000000000000,\n  tokenBalanceUsdc: 2110000,\n  tokenAllowance, 1157343987545498574545495749587452... // max uint256\n}\n")),Object(r.b)("h5",{id:"positionsof"},"positionsOf"),Object(r.b)("p",null,"Get all positions for an account for every adapter asset."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function positionsOf(address accountAddress)\n        external\n        view\n        returns (Position[] memory);\n")),Object(r.b)("h6",{id:"solidity-7"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\naddress accountAddress = 0x481140F916a4e64559694DB4d56D692CadC0326c;\nregistryAdapter.positionsOf(accountAddress);\n")),Object(r.b)("h6",{id:"example-response-7"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},"[\n  {\n    assetId: 0xe2F6b9773BF3A015E2aA70741Bde1498bdB9425b, // vault address\n    depositedBalance: 10422000000000000000,\n    depositedBalanceUsdc: 10422000,\n    tokenBalance: 2110000000000000000,\n    tokenBalanceUsdc: 2110000,\n    tokenAllowance, 1157343987545498574545495749587452... // max uint256\n  },\n  {\n    assetId: 0x19D3364A399d251E894aC732651be8B0E4e85001, // vault address\n    depositedBalance: 10422000000000000000,\n    depositedBalanceUsdc: 10422000,\n    tokenBalance: 0,\n    tokenBalanceUsdc: 0,\n    tokenAllowance, 0\n  }\n]\n")),Object(r.b)("h5",{id:"tokens"},"tokens"),Object(r.b)("p",null,"Get unique tokens for the adapter."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function tokens()\n        external\n        view\n        returns (Token[] memory);\n")),Object(r.b)("h6",{id:"solidity-8"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"RegistryAdapter registryAdapter = RegistryAdapter(0xABCD...);\nregistryAdapter.tokens();\n")),Object(r.b)("h6",{id:"example-response-8"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},"[\n  {\n    id: 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48, // token address\n    name: 'USD Coin',\n    symbol: 'USDC',\n    decimals: 18,\n    priceUsdc: 100000\n  },\n  ...\n]\n")),Object(r.b)("h3",{id:"oracle"},"Oracle"),Object(r.b)("h4",{id:"methods-1"},"Methods"),Object(r.b)("h5",{id:"setcalculations"},"setCalculations"),Object(r.b)("p",null,"Set oracle calculation contract addresses. Each calculation contract must implement getPriceUsdc(). The order of calculation contracts matters as it determines the order preference in the cascading fallback mechanism."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function setCalculations(address[] memory calculationAddresses)\n        public\n        onlyManagers;\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"calculationAddresses")," An array of addresses for underlying calculation contracts"),Object(r.b)("h5",{id:"calculations"},"calculations"),Object(r.b)("p",null,"View the calculation contract addresses currently associated with the oracle."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function calculations() external view returns (address[] memory);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," An array of calculation contract addresses associated with the oracle"),Object(r.b)("h6",{id:"example-response-9"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},"[\n   '0xfC714174E5c8bd056a45a5337E7b402CC4af7BF3',\n   '0x55e9B18fefFF7E00548d54480373Fc8843De8eA4',\n   '0x88dE7d7F7b9597C86b8cD195374FbF602934F334'\n]\n")),Object(r.b)("h5",{id:"getpriceusdcrecommended"},"getPriceUsdcRecommended"),Object(r.b)("p",null,"Get the currently recommended price given a token address."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function getPriceUsdcRecommended(address tokenAddress)\n        public\n        view\n        returns (uint256);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"tokenAddress")," The token address for which to obtain a price recommendation\n",Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," Recommended price in USDC (6 decimals)"),Object(r.b)("h6",{id:"example-response-10"},"Example Response"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"103000")),Object(r.b)("h5",{id:"getnormalizedvalueusdc"},"getNormalizedValueUsdc"),Object(r.b)("p",null,"Calculate normalized USDC value given a token address and an amount."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function getNormalizedValueUsdc(address tokenAddress, uint256 amount)\n        external\n        view\n        returns (uint256);\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"tokenAddress")," The token address\n",Object(r.b)("inlineCode",{parentName:"p"},"amount")," The amount of value to convert (in token decimals)\n",Object(r.b)("inlineCode",{parentName:"p"},"RETURN")," Recommended price in USDC (6 decimals)"),Object(r.b)("h6",{id:"example-response-11"},"Example Response"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"3442238822")),Object(r.b)("h5",{id:"tokenaliases"},"tokenAliases"),Object(r.b)("p",null,"Given a token address fetch a token alias address. This is necessary for certain wrapped or special case tokens that do not have a token price available in the oracle."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"mapping(address => address) public tokenAliases;\n")),Object(r.b)("h5",{id:"addtokenalias"},"addTokenAlias"),Object(r.b)("p",null,"Add a new token alias mapping."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"function addTokenAlias(address tokenAddress, address tokenAliasAddress)\n        public\n        onlyManagers;\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"tokenAddress")," The token address that will receive an alias\n",Object(r.b)("inlineCode",{parentName:"p"},"tokenAliasAddress")," The new token alias address"),Object(r.b)("h5",{id:"addtokenaliases"},"addTokenAliases"),Object(r.b)("p",null,"Batch add new token alias mappingings."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"    function addTokenAliases(TokenAlias[] memory tokenAliases)\n        public\n        onlyManagers\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"tokenAliases")," An array of ",Object(r.b)("inlineCode",{parentName:"p"},"TokenAlias")," structs (",Object(r.b)("inlineCode",{parentName:"p"},"[[tokenAddress, tokenAliasAddress]]"),")"),Object(r.b)("h5",{id:"removetokenalias"},"removeTokenAlias"),Object(r.b)("p",null,"Remove a token alias mapping."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"function addTokenAlias(address tokenAddress, address tokenAliasAddress)\n        public\n        onlyManagers;\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"tokenAddress")," The token address whose alias will be removed"),Object(r.b)("h3",{id:"calculation"},"Calculation"),Object(r.b)("h4",{id:"standardized-methods"},"Standardized methods"),Object(r.b)("p",null,"All calculation contracts must implement the following methods."),Object(r.b)("h5",{id:"getpriceusdc"},"getPriceUsdc"),Object(r.b)("p",null,"Fetch the recommended price given a token address. Reverts if no relevant price is found."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function getPriceUsdc(address tokenAddress) public view returns (uint256)\n")),Object(r.b)("h6",{id:"example-response-12"},"Example Response"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"103000")),Object(r.b)("h4",{id:"calculation-specific-methods"},"Calculation specific methods"),Object(r.b)("p",null,"Helper utilities for various calculations. These methods are indirectly exposed to the oracle via the oracle's cascading fallback mechanism. All of these methods can be called via the oracle contract by generating a custom ABI with the desired methods. Since these helper methods do not represent the primary use case of the oracle contract (the primary use case is fetching price) determining the details of each method implementation is left to the user."),Object(r.b)("h5",{id:"sushiswap"},"Sushiswap"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function getPriceFromRouter(address token0Address, address token1Address)\n        public\n        view\n        returns (uint256);\n        \nfunction getPriceFromRouterUsdc(address tokenAddress)\n        public\n        view\n        returns (uint256);\n        \nfunction isLpToken(address tokenAddress) public view returns (bool);\n\nfunction getRouterForLpToken(address tokenAddress)\n        public\n        view\n        returns (PriceRouter);\n        \nfunction getLpTokenTotalLiquidityUsdc(address tokenAddress)\n        public\n        view\n        returns (uint256);\n        \nfunction getLpTokenPriceUsdc(address tokenAddress)\n        public\n        view\n        returns (uint256);\n")),Object(r.b)("h5",{id:"curve"},"Curve"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function getBasePrice(address curveLpTokenAddress)\n        public\n        view\n        returns (uint256);\n\nfunction getVirtualPrice(address curveLpTokenAddress)\n        public\n        view\n        returns (uint256);\n        \nfunction isCurveLpToken(address tokenAddress) public view returns (bool);\n\nfunction getFirstUnderlyingCoinFromPool(address poolAddress)\n        public\n        view\n        returns (address);\nfunction getCurvePriceUsdc(address curveLpTokenAddress)\n        public\n        view\n        returns (uint256);\n")),Object(r.b)("h5",{id:"ironbank"},"IronBank"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function isIronBankMarket(address tokenAddress) public view returns (bool);\n\nfunction getIronBankMarkets() public view returns (address[] memory);\n\nfunction getIronBankMarketPriceUsdc(address tokenAddress)\n        public\n        view\n        returns (uint256);\n")),Object(r.b)("h3",{id:"lens"},"Lens"),Object(r.b)("h4",{id:"methods-2"},"Methods"),Object(r.b)("h5",{id:"addadapter"},"addAdapter"),Object(r.b)("p",null,"Add a registry adapter. The registry adapter must conform to the standardized registry adapter interface."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function addAdapter(address adapterAddress) public onlyManager;\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"adapterAddress")," Address of the adapter to add"),Object(r.b)("h6",{id:"solidity-9"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"Lens lens = Lens(0x9b8b9F6146B29CC32208f42b995E70F0Eb2807F3);\naddress adapterAddress = 0xe11ba472F74869176652C35D30dB89854b5ae84D;\nlens.addAdapter(adapterAddress);\n")),Object(r.b)("h5",{id:"removeadapter"},"removeAdapter"),Object(r.b)("p",null,"Remove a registry adapter."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function removeAdapter(address adapterAddress) public onlyManager;\n")),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"adapterAddress")," Address of the adapter to remove"),Object(r.b)("h6",{id:"solidity-10"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"Lens lens = Lens(0x9b8b9F6146B29CC32208f42b995E70F0Eb2807F3);\naddress adapterAddress = 0xe11ba472F74869176652C35D30dB89854b5ae84D;\nlens.removeAdapter(adapterAddress);\n")),Object(r.b)("h5",{id:"adapters"},"adapters"),Object(r.b)("p",null,"Fetch a list of registry adapter addresses."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function adapters() external view returns (address[] memory);\n")),Object(r.b)("h6",{id:"solidity-11"},"Solidity"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"Lens lens = Lens(0x9b8b9F6146B29CC32208f42b995E70F0Eb2807F3);\naddress[] memory = lens.adapters();\n")),Object(r.b)("h6",{id:"example-response-13"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"['0xE14d13d8B3b85aF791b2AADD661cDBd5E6097Db1',\n '0xdCD90C7f6324cfa40d7169ef80b12031770B4325',\n '0x986b4AFF588a109c09B50A03f42E4110E29D353F',\n '0xcB550A6D4C8e3517A939BC79d0c7093eb7cF56B5']\n")),Object(r.b)("h5",{id:"assetsfromadapter"},"assetsFromAdapter"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assetsFromAdapter(RegistryAdapter registryAdapterAddress)\n        external\n        view\n        returns (RegistryAdapter.Asset[] memory)\n")),Object(r.b)("p",null,"See: ",Object(r.b)("a",{parentName:"p",href:"#assets"},"registryAdapter.assets")),Object(r.b)("h5",{id:"assets-1"},"assets"),Object(r.b)("p",null,"Fetch all assets for all supported protocols."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assets()\n        external\n        view\n        returns (RegistryAdapter.Asset[] memory)\n")),Object(r.b)("p",null,"See: ",Object(r.b)("a",{parentName:"p",href:"#assets"},"registryAdapter.assets")),Object(r.b)("h5",{id:"positionsfromadapter"},"positionsFromAdapter"),Object(r.b)("p",null,"Fetch positions for an account for a specific adapter."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function positionsFromAdapter(\n        address account,\n        RegistryAdapter registryAdapterAddress\n    ) external view returns (RegistryAdapter.Position[] memory)\n")),Object(r.b)("p",null,"See: ",Object(r.b)("a",{parentName:"p",href:"#positions-of"},"registryAdapter.positionsOf")),Object(r.b)("h5",{id:"positionsof-1"},"positionsOf"),Object(r.b)("p",null,"Fetch all positions for an account within the ecosystem."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function positionsOf(address account)\n        external\n        view\n        returns (RegistryAdapter.Position[] memory)\n")),Object(r.b)("p",null,"See: ",Object(r.b)("a",{parentName:"p",href:"#positions-of"},"registryAdapter.positionsOf")),Object(r.b)("h5",{id:"assetslength-1"},"assetsLength"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assetsLength() public view returns (uint256);\n")),Object(r.b)("p",null,"Get the total number of assets for all Yearn family protocols\nSee: ",Object(r.b)("a",{parentName:"p",href:"#assets-length"},"registryAdapter.assetsLength")),Object(r.b)("h5",{id:"assetsaddresses-1"},"assetsAddresses"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-javascript"},"function assetsAddresses() public view returns (address[] memory);\n")),Object(r.b)("p",null,"Get all addresses for all Yearn family assets\nSee: ",Object(r.b)("a",{parentName:"p",href:"#assets-addresses"},"registryAdapter.assetsAddresses")),Object(r.b)("h5",{id:"allowances"},"allowances"),Object(r.b)("p",null,"Batch fetch allowances given an owner, tokens and spender. This is a helper utility for fetching large amounts of token allowances for a specific set of contracts (zapper contract, for example)"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-solidity"},"    function allowances(\n        address owner,\n        address[] memory tokens,\n        address[] memory spenders\n    ) external view returns (uint256[] memory)\n")))}o.isMDXComponent=!0},270:function(e,t,a){"use strict";a.d(t,"a",(function(){return b})),a.d(t,"b",(function(){return m}));var n=a(0),s=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,s=function(e,t){if(null==e)return{};var a,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(s[a]=e[a]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(s[a]=e[a])}return s}var d=s.a.createContext({}),o=function(e){var t=s.a.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},b=function(e){var t=o(e.components);return s.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.a.createElement(s.a.Fragment,{},t)}},u=s.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),b=o(a),u=n,m=b["".concat(c,".").concat(u)]||b[u]||p[u]||r;return a?s.a.createElement(m,i(i({ref:t},d),{},{components:a})):s.a.createElement(m,i({ref:t},d))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,c=new Array(r);c[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var d=2;d<r;d++)c[d]=a[d];return s.a.createElement.apply(null,c)}return s.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);